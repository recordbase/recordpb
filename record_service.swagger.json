{
  "swagger": "2.0",
  "info": {
    "title": "RecordService",
    "version": "1.0",
    "contact": {
      "name": "RecordService",
      "url": "https://github.com/codeallergy/record",
      "email": "zander@schwid.com"
    }
  },
  "tags": [
    {
      "name": "RecordService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "application/octet-stream"
  ],
  "paths": {
    "/api/v1/counts": {
      "put": {
        "summary": "Gets attributes counts",
        "operationId": "RecordService_GetCounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordCounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordTenantRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/keys/add": {
      "put": {
        "summary": "Allocate primary key range",
        "operationId": "RecordService_AddKeyRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordKeyRange"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/keys/capacity": {
      "put": {
        "summary": "Gets primary keys capacity",
        "operationId": "RecordService_GetKeyCapacity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordKeyCapacity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordTenantRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/create": {
      "put": {
        "summary": "Create record with new primary_key",
        "operationId": "RecordService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordCreateRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/delete": {
      "put": {
        "summary": "Delete record",
        "operationId": "RecordService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordDeleteRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/get": {
      "put": {
        "summary": "Get record with all attributes",
        "operationId": "RecordService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordRecordEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordGetRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/lookup": {
      "put": {
        "summary": "Quick record lookup request",
        "operationId": "RecordService_Lookup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordRecordEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordLookupRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/map/get": {
      "put": {
        "summary": "Get map value associated with the record",
        "operationId": "RecordService_MapGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordMapEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordMapGetRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/map/put": {
      "put": {
        "summary": "Put map value associated with the record. Returns old value.",
        "operationId": "RecordService_MapPut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordMapValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordMapPutRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/map/range": {
      "put": {
        "summary": "Scan all map key-value pairs",
        "operationId": "RecordService_MapRange",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/recordMapEntry"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of recordMapEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordMapRangeRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/map/remove": {
      "put": {
        "summary": "Remove map value associated with the record. Returns old value.",
        "operationId": "RecordService_MapRemove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/recordMapValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordMapRemoveRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/scan": {
      "put": {
        "summary": "Scan records",
        "operationId": "RecordService_Scan",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/recordRecordEntry"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of recordRecordEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordScanRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/search": {
      "put": {
        "summary": "Search records by indexed attributes",
        "operationId": "RecordService_Search",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/recordRecordEntry"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of recordRecordEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordSearchRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    },
    "/api/v1/records/update": {
      "put": {
        "summary": "Update record attributes",
        "operationId": "RecordService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordUpdateRequest"
            }
          }
        ],
        "tags": [
          "RecordService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "recordAttributeEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "all attributes are indexed in the form of 'name:value' -\u003e record, list\u003crecord\u003e"
    },
    "recordColumnEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "keys stored inside the record, values stored inside the record"
    },
    "recordCountEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "recordCounts": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordCountEntry"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordCountEntry"
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordCountEntry"
          }
        }
      }
    },
    "recordCreateRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordAttributeEntry"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordColumnEntry"
          }
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordFileEntry"
          }
        }
      }
    },
    "recordCreateResponse": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        }
      }
    },
    "recordDeleteRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        }
      }
    },
    "recordFileEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "keys stored inside the record, values stored outside of the record"
    },
    "recordGetRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "fileContents": {
          "type": "boolean"
        }
      }
    },
    "recordKeyCapacity": {
      "type": "object",
      "properties": {
        "pendingKeys": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "recordKeyRange": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "firstKey": {
          "type": "string",
          "format": "int64"
        },
        "lastKey": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "recordLookupRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "lookupType": {
          "$ref": "#/definitions/recordLookupType"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "fileContents": {
          "type": "boolean"
        }
      }
    },
    "recordLookupType": {
      "type": "string",
      "enum": [
        "UNKNOWN_LOOKUP",
        "BY_PRIMARY_KEY",
        "BY_ATTRIBUTE",
        "BY_TAG"
      ],
      "default": "UNKNOWN_LOOKUP"
    },
    "recordMapEntry": {
      "type": "object",
      "properties": {
        "mapKey": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "keys stored outside of the record, values stored outside of the record"
    },
    "recordMapGetRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "mapKey": {
          "type": "string"
        }
      }
    },
    "recordMapPutRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "mapKey": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "recordMapRangeRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "recordMapRemoveRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "mapKey": {
          "type": "string"
        }
      }
    },
    "recordMapValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "byte"
        },
        "updated": {
          "type": "boolean"
        }
      }
    },
    "recordRecordEntry": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "deletedAt": {
          "type": "string",
          "format": "int64"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordAttributeEntry"
          },
          "title": "all records are indexed by hash256(name:value)"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "all records are indexed by tag"
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordColumnEntry"
          },
          "title": "values stored inside the record"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordFileEntry"
          },
          "title": "values stored outside of record"
        }
      },
      "title": "located in tenant:rec:primary_key"
    },
    "recordScanRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "recordSearchRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "lookupType": {
          "$ref": "#/definitions/recordLookupType"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "recordTenantRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        }
      }
    },
    "recordUpdateRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "primaryKey": {
          "type": "string"
        },
        "updateType": {
          "$ref": "#/definitions/recordUpdateType"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordAttributeEntry"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordColumnEntry"
          }
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/recordFileEntry"
          }
        }
      }
    },
    "recordUpdateType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "MERGE",
        "REPLACE"
      ],
      "default": "UNKNOWN_TYPE"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
